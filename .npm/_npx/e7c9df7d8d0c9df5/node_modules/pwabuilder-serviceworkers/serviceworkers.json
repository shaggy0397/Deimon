{
  "serviceworkers":[
    {
      "id": 1,
      "description": "This simple but elegant solution pulls a file from your web server called \"offline.html\" (make sure that file is actually there) and serves the file whenever a network connection can not be made.",
      "title": "Offline page"
    },
    {
      "id": 2,
      "description": "A solution that expands the offline capabilities of your app. A copy of each pages is stored in the cache as your visitors view them. This allows a visitor to load any previously viewed page while they are offline.",
      "title": "Offline copy of pages"
    },
    {
      "id": 3,
      "description": "A copy of each pages is stored in the cache as your visitors view them. This allows a visitor to load any previously viewed page while they are offline. This then adds the \"offline page\" that allows you to customize the message and experience if the app is offline, and the page is not in the cache.",
      "title": "Offline copy with Backup offline page"
    },
    {
      "id": 4,
      "description": "Use this service worker to pre-cache content.",
      "title": "Cache-first network"
    },
    {
      "id": 5,
      "description": "Use this service worker to improve the performance of your app, and make it work offline. The advanced caching service worker allows you to configure files and routes that are cached in different manners (pre-cache, server first, cache first, etc.).",
      "title": "Advanced caching"
    },
    {
      "id": 6,
      "description": "Use this service worker to implement background sync for your app, ensuring that crucial requests made while the app is offline can be replayed when the user comes back online.",
      "title": "Background Sync"
    },
    {
      "id": 7,
      "description": "Use this service worker to play back audio and video to the user that has been cached for offline play.",
      "title": "Serving Cached media"
    }
  ]
}
